from enaml.layout.api import align, hbox, vbox, spacer, horizontal
from enaml.widgets.api import Window, Container, Label, SpinBox
from UI.widgets.api import MultiselectWidget, ImageWidget
from image_clusters_model import ImageClustersModel
from enaml.application import deferred_call
from ui_utils import deferred

enamldef Main(Window): m:
    attr image
    attr model = ImageClustersModel(image=m.image)
    attr clustered_image << model.clustered_image
    attr image_viewer = ImageViewer(m, destroy_on_close=False)

    clustered_image ::
        deferred_call(show_clustered_image)

    initialized :: clustered_image

    func show_clustered_image():
        image_viewer.image = clustered_image
        image_viewer.show()

    Container:
        enabled << not model.busy
        padding = 3
        constraints = [
            vbox(
                hbox(n_clusters_widget, spacer),
                image_widget
            )
        ]
        SpinBox: n_clusters_widget:
            value := model.n_clusters
            minimum = 1
            maximum = 32
        ImageWidget: image_widget:
            image << model.image


enamldef ImageViewer(Window): v:
    attr image
    Container:
        padding=0
        ImageWidget: image_widget:
            image << v.image


